# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and test

    runs-on: ubuntu-20.04

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
        with:
          elixir-version: '1.13.3-otp-24' 
          otp-version: '24.2.2'
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Get and Compile dependencies
        run: mix do deps.get, deps.compile
      - name: Run mix test
        run: CI=true RELEASE_BUILD=true MIX_ENV=test mix test --color
      - name: Run mix credo
        run: mix credo --strict
      - name: Run mix dialyzer
        run: mix dialyzer
      - name: Run mix coveralls
        run: mix coveralls
      
